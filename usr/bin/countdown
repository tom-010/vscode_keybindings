#!/usr/bin/python3

from time import sleep
import os
import argparse
import re

def main():
    remaining = get_duration()
    while remaining > 0:
        print_seconds(remaining)
        if remaining <= 3 and remaining > 0:
            beep()
        try:
            sleep(1)
        except KeyboardInterrupt:
            print_seconds(remaining, end='\n', prefix='')
            exit(0)
        remaining -= 1
    print_seconds(remaining, end='\n', prefix='')
    beep(1000)
    

def print_seconds(seconds, prefix=' ', end='\r'):
    print('                                      ', end='\r')
    print(prefix+'countdown: ' +seconds_to_label(seconds), end=end)


def get_duration():
    parser = argparse.ArgumentParser(description='Countdown')
    parser.add_argument('time', type=str, help='time to coundown from. e.g. `10` is 10 seconds, `1:10` is one minute, 10 seconds, `2:1:10` is two hours one minute, 10 seconds')
    args = parser.parse_args()
    def clean_part(p):
        p = re.sub('[^0-9]','', p) # deltee all non-numeric stuff
        return int(p)
    parts = [clean_part(p) for p in args.time.split(':')]
    if len(parts) == 1:
        return parts[0]
    if len(parts) == 2:
        return parts[0] * 60 + parts[1]
    if len(parts) == 3:
        return parts[0] * 60*60 + parts[1] * 60 + parts[0]
    print('could not parse time')
    exit(1)

def seconds_to_label(s):
    if s < 60:
        seconds = str(s).zfill(2)
        return f'{seconds} s'
    elif s < 60*60:
        minutes = str(s//60).zfill(2)
        seconds = str(s%60).zfill(2)
        return f'{minutes}:{seconds} m'
    else:
        h = s//(60*60)
        hours = str(h).zfill(2)
        minutes = str((s%3600) // 60).zfill(2)
        seconds = str(s%60).zfill(2)
        return f'{hours}:{minutes}:{seconds} h'

def beep(ms=100):
    os.system(f'beep -l {ms}') # sudo apt install sox && sudo modprobe -v pcspkr

main()
